import readingFormModel from './readingFormModel';

const {
  formField: {
    readingId,
    uomId,
    typeValue,
    isActive,
    toDo,
    dataType,
    manualReading,
    conditionValue,
    validateEntry,
    minimumValue,
    maximumValue,
    validationErrMsg,
    aggregateTimePeriod,
    thresholdValue,
    recurrentValue,
    orderGeneratedOn,
    propagateValue,
    thresholdMin,
    thresholdMax,
    checkListId,
    teamCategory,
    mType,
    mroPropagate,
    alarmName,
    priorityValue,
    categoryValue,
    alarmRecipient,
    propagateAlarm,
    notiyMessage,
    descriptionValue,
    alarmAction,
    fontAwesomeIcon,
    ttlMinute,
    measuredOn,
    measureValue,
    measureId,
    equipmentId,
  },
} = readingFormModel;

export default {
  [readingId.name]: '',
  [uomId.name]: '',
  [typeValue.name]: '',
  [isActive.name]: 'yes',
  [toDo.name]: { value: 'None', label: 'None' },
  [dataType.name]: { value: 'Float', label: 'Number' },
  [manualReading.name]: true,
  [conditionValue.name]: { value: 'None', label: 'None' },
  [validateEntry.name]: true,
  [minimumValue.name]: '0.00',
  [maximumValue.name]: '0.00',
  [validationErrMsg.name]: 'The answer you entered has an invalid format.',
  [aggregateTimePeriod.name]: '',
  [thresholdValue.name]: '',
  [recurrentValue.name]: { value: 'None', label: 'None' },
  [orderGeneratedOn.name]: '',
  [propagateValue.name]: '',
  [thresholdMin.name]: '0.00',
  [thresholdMax.name]: '0.00',
  [checkListId.name]: '',
  [teamCategory.name]: '',
  [mType.name]: { value: 'oc', label: 'On Condition' },
  [mroPropagate.name]: '',
  [alarmName.name]: '',
  [priorityValue.name]: '',
  [categoryValue.name]: '',
  [alarmRecipient.name]: '',
  [propagateAlarm.name]: '',
  [notiyMessage.name]: '',
  [descriptionValue.name]: '',
  [alarmAction.name]: '',
  [fontAwesomeIcon.name]: '',
  [ttlMinute.name]: '',
  [measuredOn.name]: '',
  [measureValue.name]: '0.00',
  [measureId.name]: '',
  [equipmentId.name]: '',
};
